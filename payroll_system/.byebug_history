c
$deduction
c
deduct_limit
c
@slip_time.exists?{|element| element[:deduct_type] == "NPS"}
@slip_time.exists{|element| element[:deduct_type] == "NPS"}
@slip_time.exist{|element| element[:deduct_type] == "NPS"}
@slip_time.find_by{|element| element[:deduct_type] == "NPS"}
@slip_time.where{|element| element[:deduct_type] == "NPS"}
@slip_time
@slip_time.find{|element| element[:deduct_type] == "NPS"}
c
@slip_time
c
@slip_time
c
@slip_time
c
@user.tax_deductions.where("cast(strftime('%Y', financial_year) as int) = ?", slip_year)
c
@user.salaries.find_by(salary_date: params[:payslip][:slip_month])
slip_year
@slip_year
c
$tax_sal
c
@user.tax_deductions.where("cast(strftime('%Y', financial_year) as int) = ?", slip_year)
c
@user.tax_deduction.where("cast(strftime('%Y', financial_year) as int) = ?", slip_year)
c
@user.salaries.find_by(salary_date: params[:payslip][:slip_month])
slip_year
$tax_sal
c
$tax_sal
c
@payslip
c
$att_tax
c
$att_tax
$tax_sal
c
$tax_sal
c
$att_tax
$tax_sal
@sal.total_salary
@attend.attend_rate
c
@sal.total_salary
@attend.attend_rate
@attend
@user.attendances.find_by(current_month: params[:payslip][:slip_month])
c
@user.salaries.where(salary_date: params[:payslip][:slip_month])
@user.salaries.where(salary_date: params[:payslip][:slip_month]).total_salary
@attend[attend_rate]
@attend[:attend_rate]
(@attend).attend_rate
@user.attendances.attend_rate
@attend
@attend.attend
@sal
@attend
c
@user.attendances.attend_rate
$tax_sal
c
@user.salaries.where(salary_date: params[:payslip][:slip_month])
@user
c
@user.attendances.where(current_month: params[:payslip][:slip_month])
@user
c
@user.attendances.where(current_month: params[:payslip][:slip_month])
@user.attendances.where
params[:payslip][:slip_month] 
@user
c
@user.attendances.current_month
params[:payslip][:slip_month]
@user
c
@user
@payslip
c
@user.payslips
@user.payslip
@user.payslips
@user.payslips.slip_month
@user
c
@user
c
@user
@payslip
c
request.params[:payslip][:user_id]
request.params[:payslip[:user_id]]
request.params[:payslip.user_id]
request.params[:payslip]
request.params[0]
request.params[@payslip]
request.params[payslip]
request.params
request
request.body
params
@payslip
c
@payslip
c
@payslip
c
@payslip
c
@payslip
c
@user
c
@user
@user.payslips.slip_month
@user.payslip.slip_month
@user.payslip.slip_month == @user.attendance.current_month
$tax_sal
@payslip
payslip_params
c
$tax_sal
@payslip
c
@attendance
c
@attendance
c
@attendance
c
@attendance
c
@attendance
c
@attendance
c
work_days
c
unpaid_value
$work_days
c
$work_days
c
unpaid_value
tot_value
c
@attendance
c
weekdays
c
weekdays
c
@attendance
c
d2
d1
c
@attendance
c
date_value.class
type(date_value)
type_of(date_value)
date_value
exit
@user.save!
@user.save
user_params
